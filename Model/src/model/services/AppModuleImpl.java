package model.services;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;



import model.services.common.AppModule;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 02 12:43:01 BDT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }


    /**
     * Container's getter for gatepass1.
     * @return gatepass1
     */
    public ViewObjectImpl getgatepass1() {
        return (ViewObjectImpl)findViewObject("gatepass1");
    }


    /**
     * Container's getter for GatePassDetail1.
     * @return GatePassDetail1
     */
    public ViewObjectImpl getGatePassDetail1() {
        return (ViewObjectImpl)findViewObject("GatePassDetail1");
    }

    /**
     * Container's getter for GatePassVsGatePassDeatail1.
     * @return GatePassVsGatePassDeatail1
     */
    public ViewLinkImpl getGatePassVsGatePassDeatail1() {
        return (ViewLinkImpl)findViewLink("GatePassVsGatePassDeatail1");
    }


    /* Method to Populate WHO Column */

    public void setSessionValues(String orgId, String userId, String respId,
                                 String respAppl) {

        System.out.println("UserId....." + userId);
        System.out.println("RespId..." + respId);

        


        if (userId != null) {
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession)ectx.getSession(false);
            userSession.setAttribute("userId", userId);
             
            
            userSession.setAttribute("respId", respId);
    
            
            
       
        }
    }


    /**
     * Container's getter for XxGatepassVO1.
     * @return XxGatepassVO1
     */
    public ViewObjectImpl getXxGatepassVO1() {
        return (ViewObjectImpl)findViewObject("XxGatepassVO1");
    }

    /**
     * Container's getter for GatePassDetailV2_1.
     * @return GatePassDetailV2_1
     */
    public ViewObjectImpl getGatePassDetailV2_1() {
        return (ViewObjectImpl)findViewObject("GatePassDetailV2_1");
    }

    /**
     * Container's getter for XxGatePassVOvsXxGatePassDetail1.
     * @return XxGatePassVOvsXxGatePassDetail1
     */
    public ViewLinkImpl getXxGatePassVOvsXxGatePassDetail1() {
        return (ViewLinkImpl)findViewLink("XxGatePassVOvsXxGatePassDetail1");
    }
}
